AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 in custom VPC with SSH + auto AMI from SSM

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Type: String
    Default: t2.micro
  AmiId:                     
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: { CidrBlock: 10.0.0.0/16, EnableDnsSupport: true, EnableDnsHostnames: true }

  IGW: { Type: AWS::EC2::InternetGateway }
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: { VpcId: !Ref VPC, InternetGatewayId: !Ref IGW }

  Subnet:
    Type: AWS::EC2::Subnet
    Properties: { VpcId: !Ref VPC, CidrBlock: 10.0.1.0/24, MapPublicIpOnLaunch: true }

  RT:
    Type: AWS::EC2::RouteTable
    Properties: { VpcId: !Ref VPC }

  Route:
    Type: AWS::EC2::Route
    Properties: { RouteTableId: !Ref RT, DestinationCidrBlock: 0.0.0.0/0, GatewayId: !Ref IGW }

  Assoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: { SubnetId: !Ref Subnet, RouteTableId: !Ref RT }

  SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Allow SSH
      SecurityGroupIngress:
        - { IpProtocol: tcp, FromPort: 22, ToPort: 22, CidrIp: 0.0.0.0/0 }

  EC2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref Subnet
      SecurityGroupIds: [ !Ref SG ]

Outputs:
  PublicIP:
    Description: Public IP of EC2
    Value: !GetAtt EC2.PublicIp
